// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: no.proto

package game.proto.no;

/**
 * Protobuf enum {@code No.No}
 */
public enum No
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NONE = 0;</code>
   */
  NONE(0),
  /**
   * <pre>
   * player
   * </pre>
   *
   * <code>PlayerMoveReq = 201;</code>
   */
  PlayerMoveReq(201),
  /**
   * <pre>
   * fish
   * </pre>
   *
   * <code>FishReq = 8001;</code>
   */
  FishReq(8001),
  /**
   * <code>FishHookReq = 8002;</code>
   */
  FishHookReq(8002),
  /**
   * <pre>
   * fight
   * </pre>
   *
   * <code>FightStartReq = 2001;</code>
   */
  FightStartReq(2001),
  /**
   * <code>FightEndReq = 2004;</code>
   */
  FightEndReq(2004),
  /**
   * <pre>
   * Hero
   * </pre>
   *
   * <code>HeroUpReq = 4001;</code>
   */
  HeroUpReq(4001),
  /**
   * <code>HeroTalentChangeReq = 4002;</code>
   */
  HeroTalentChangeReq(4002),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NONE = 0;</code>
   */
  public static final int NONE_VALUE = 0;
  /**
   * <pre>
   * player
   * </pre>
   *
   * <code>PlayerMoveReq = 201;</code>
   */
  public static final int PlayerMoveReq_VALUE = 201;
  /**
   * <pre>
   * fish
   * </pre>
   *
   * <code>FishReq = 8001;</code>
   */
  public static final int FishReq_VALUE = 8001;
  /**
   * <code>FishHookReq = 8002;</code>
   */
  public static final int FishHookReq_VALUE = 8002;
  /**
   * <pre>
   * fight
   * </pre>
   *
   * <code>FightStartReq = 2001;</code>
   */
  public static final int FightStartReq_VALUE = 2001;
  /**
   * <code>FightEndReq = 2004;</code>
   */
  public static final int FightEndReq_VALUE = 2004;
  /**
   * <pre>
   * Hero
   * </pre>
   *
   * <code>HeroUpReq = 4001;</code>
   */
  public static final int HeroUpReq_VALUE = 4001;
  /**
   * <code>HeroTalentChangeReq = 4002;</code>
   */
  public static final int HeroTalentChangeReq_VALUE = 4002;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static No valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static No forNumber(int value) {
    switch (value) {
      case 0: return NONE;
      case 201: return PlayerMoveReq;
      case 8001: return FishReq;
      case 8002: return FishHookReq;
      case 2001: return FightStartReq;
      case 2004: return FightEndReq;
      case 4001: return HeroUpReq;
      case 4002: return HeroTalentChangeReq;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<No>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      No> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<No>() {
          public No findValueByNumber(int number) {
            return No.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return game.proto.no.NoOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final No[] VALUES = values();

  public static No valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private No(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:No.No)
}

