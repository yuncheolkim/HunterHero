syntax = "proto3";
package Message;
option java_package = "game.proto.data";
option optimize_for = SPEED;
option java_multiple_files = true;

//////////////////////////////
// 给前端的数据
message PlayerData {
    int64 pid = 1;
    string name = 2;
    string account = 3;
    // 称谓
    string title = 4;
    int32 level = 9;
    // 回城 CD 恢复时间点,毫秒数
    int64 hotelCd = 10;
    // 回城旅店位置id
    int32 hotelId = 11;
    // 收集的称谓
    repeated int32 collectTitle = 13;
    // Fish
    int32 fishAreaId = 14;
    // 钓鱼技能等级
    int32 skillFishLevel = 15;
    // 正在进行的战役
    int32 battleId = 16;
    // NpcShowEnum 显示与否npc
    int32 showNpc = 17;
    // vip等级
    int32 vipLevel = 18;
    // vip经验
    int32 vipExp = 19;
    // 功能开启标记
    // 1:银行
    int32 openFeature = 100;
    // 任务信息
    PlayerTask task = 101;
    // 所在场景
    SceneData sceneData = 201;
    // 资源信息
    Resource resource = 301;
    // 当前跑镖信息
    ExpressInfo expressInfo = 310;
    // 跑镖列表
    repeated int32 expressId = 311;
    // 英雄信息
    map<int32, PlayerHero> hero = 401;
    // 战斗中的信息
    repeated FightEnemyInfo fightInfo = 501;
    // 战斗是否手动
    bool manual = 502;
    // 地下城
    Dungeon dungeon = 510;
    // 背包
    map<int32, BagSlot> bag = 601;
    // 背包容量
    int32 bagCapacity = 602;
    // 银行容量
    int32 bankCapacity = 603;
    // 银行
    map<int32, BagSlot> bank = 604;
    // 阵型
    repeated Formation formation = 701;
    // 默认阵型id
    int32 defaultFormationIndex = 702;
    // 竞技场防守阵型id
    int32 arenaFormationIndex = 703;
    // 家园
    HomeData homeData = 801;

}
///////////////////////////////////////////  Home
// 家园数据
message HomeData{
    int32 level = 1;
    string name = 2;
    int32 exp = 3;
    int64 openArea = 5; // 开启区域标记
    int32 resourceLimit = 6;
    int32 needExp = 7;
    int32 coin = 8;// 家园币
    int32 cookLevel = 9;// 厨房等级
    map<int32, HomePosList> mapData = 10;
    map<int32, int32> resourceCount = 11;
    int32 taskDay = 12;
    map<int32, int32> completeTask = 13;
}
message HomePosList{
    int32  pos = 1;
    repeated HomePosData data = 2;
}

// 地图中位置信息
message HomePosData{
    int32 id = 1;// 物品id
    int32 pos = 2;// |---16:x ---|--- 16:y ---|
    HomeType type = 3;
    int64 time = 4;
    bytes body = 10;// 对应不同类型不同数据结构
}


// 农作物
message HomeFarm{
    int64 time = 1;// 种植时间
}
// 建筑物
message HomeBuild{
    int32 x = 1;
    int32 y = 2;
}

// 开启区域
message HomeRect{
    int32 x = 1;
    int32 y = 2;
    int32 w = 3;
    int32 h = 4;
}


///////////////////////////////////////////  Formation
// 法阵
message FormationEnhance{

}
// 阵型
message Formation {
    string name = 1;
    repeated FormationPos pos = 3;
    int32 index = 4;
}
// 阵型位置
message FormationPos {
    int32 index = 1;
    int32 heroId = 2;
    int32 order = 3;
    int32 enhance = 4; // 法阵
}


message FormationPosUpdate{
    FormationPos pos = 2;
}
// 资源
message Resource {
    int32 exp = 10;
    int32 needExp = 11;
    int64 gold = 12;
    int32 lei = 13;
    int32 power = 6;
    int32 maxPower = 7;
    int32 powerRecoverSecond = 8;

}

message ScenePos {
    float x = 1;
    float y = 2;
}
message SceneData {
    int32 id = 1;
    ScenePos pos = 2;
}

message PlayerTask {
    map<int32, RunTask> runTask = 3;
}
////////////// task

message RunTask {
    int32 taskId = 1;
    bool complete = 2;
    repeated TaskTarget target = 3;
}

message TaskTarget {
    int32 id = 1;
    int32 value = 2;
    bool complete = 3;
}
//////////// hero

// 英雄信息
message PlayerHero {
    int32 id = 1;
    int32 level = 2;
    int32 exp = 3;
    Property property = 5;
    PropertyEffect propertyEffect = 6;
    int32 talent = 7;
    map<int32, Equipment> equipment = 8;
    map<int32, HeroRealm> powerUp = 9;
}
// 修炼等级
message HeroRealm {
    int32 id = 1;
    int32 level = 2;
}
// 装备
message Equipment {
    int32 id = 1;
    int32 level = 2;
    Property property = 4;
}

//属性
message Property {
    int32 hp = 1;
    int32 damage = 2;
    int32 def = 3;
    int32 avoid = 4;
    int32 critical = 5;
    int32 criticalDamage = 6;
    int32 speed = 7;
    int32 avoidBase = 8;
    int32 criticalBase = 9;
    int32 defBase = 10;
}

// 属性效果 v/100
message PropertyEffect {
    int32 defRate = 1; //减伤(百分比)
    int32 avoidRate = 2; //暴击概率
    int32 criticalRate = 3; //闪避概率
}

////////////////// Fight
message FightHeroPos {
    int32 heroId = 1;
    int32 pos = 2;
    int32 enhance = 3;
    int32 order = 4;
}


message FightEnemyInfo {
    int32 id = 1;
    int32 pos = 2;
    int32 level = 3;
    Property property = 4;
    EnemyType type = 5;
    string name = 6;
}
message FightHmHeroPos {
    int32 heroId = 1;
    int32 fromPos = 2;
    int32 toPos = 3;
    int32 order = 4;
}

message HeroDataRecord {
    int32 id = 1;
    int32 pos = 2;
    int32 hp = 3;
    int32 level = 4;
    int32 type = 5;// 0:npc,1:玩家
    string name = 10;
}

message RoundRecord {
    int32 round = 1;
    repeated Record record = 2;
}

message Record {
    RecordType type = 1;
    int32 heroId = 2;
    int32 id = 3;
    int32 pos = 4;
    DisplayPoint dp = 5;//血量位置
    // pos
    repeated int32 target = 11;
    DamageType damageType = 21;
    int32 value = 22;
    string actionPoint = 32;
    BuffRecord buffRecord = 41;

}

message BuffRecord {

    int32 buffId = 1;

    int32 round = 2;

    int32 remainRound = 3;

    int32 i1 = 4;

    int32 i2 = 5;

    int32 i3 = 6;

    float f1 = 21;

    float f2 = 22;

}
// Reward
message Reward {
    RewardType type = 100;
    int32 rewardId = 1;
    int32 count = 2;

    // 奖励英雄经验 0：玩家获得经验,大于0：英雄获得经验
    int32 heroId = 3;
    // 装备
    Property property = 10;
}

// item
message ItemData {
    int32 itemId = 1;
    int32 count = 2;
    // 装备
    Property property = 3;
}

// Bag
message BagSlot {
    int32 slotId = 1;
    ItemData data = 2;
}


// 副本
message Dungeon{
    int32 id = 1;
    int32 bossId = 2;// 当前战斗的boss
    repeated int32 defeated = 3;//

}
///////////////////////////////////////////////  Express

// 跑镖信息
message ExpressInfo{
    int32 id = 1;
}
///////////////////////////////////////////////  排位

// 比赛信息
message LadderSingleReport{
    int64 winId = 1;
    int64 first = 2; // 先出手的玩家
    LadderSinglePlayer p1 = 5;
    LadderSinglePlayer p2 = 6;
}
message LadderSinglePlayer{
    int64 uid = 1;
    int32 heroId = 2;
    string name = 5;
}

///////////////////////////////////////////////  Enum

enum NpcShowEnum{
    NPC_NONE = 0;
    NPC_SHOW_1 = 1;
}
// 物品品质
enum EnumItemQuality{
    Q_NONE = 0;
    Q_W = 1;
    Q_G = 2;
    Q_B = 3;
    Q_P = 4;
    Q_O = 5;
    Q_R = 6;
}

// 伤害类型
enum EnumDamageType{
    D_NONE = 0; // 普通
    D_FIRE = 1; // 火焰
    D_LIGHT = 2; // 闪电
}



enum FormationType {
    FORMATION_NONE = 0;
    FORMATION_DEFAULT = 1; //默认阵型
    FORMATION_ARENA = 2; // 竞技场防守
}

enum RewardType {
    REWARD_NORMAL = 0;
    // 资源
    REWARD_RESOURCE = 1;
    // 物品
    REWARD_ITEM = 2;
}


enum RecordType {
    ACTION = 0;
    ATTACK = 1;
    HEALTH_CHANGE = 2;
    AVOID = 3;
    BUFF_ADD = 4;
    BUFF_REMOVE = 5;
    BUFF_UPDATE = 6;
    HERO_ACTION = 7;
    SKILL_USE = 8;
    SHIELD_CHANGE = 9; // 护盾变化
}
enum DamageType {
    DAMAGE_NONE = 0;
    DAMAGE_NORMAL = 1;
    DAMAGE_CRITICAL = 2;
    DAMAGE_SKILL = 3;
    DAMAGE_BUFF = 4;
}

enum DisplayPoint{
    DP_ATT_1 = 0;// 出发
    DP_ATT_2 = 1;// 到达
    DP_ATT_3 = 2;// 返回
    DP_DEF_1 = 3;// 防守方的位置
}
enum EnemyType {
    CREATURE = 0;
    PLAYER = 1;
    NPC = 2;
    EXERCISE = 3;
}

// 手动战斗,执行的动作
enum ManualActionType{
    MA_NONE = 0;
    MA_ATTACK = 1;// 攻击
    MA_SKILL = 2;// 使用技能
}

enum FightSide{
    FS_NONE = 0;
    FS_A = 1;
    FS_B = 2;
}

//地图上的物品
enum HomeType{
    H_NONE = 0; // 空地
    //    H_LAND = 1; // 土地
    H_FARM = 2; // 农作物
    H_BUILD = 3; // 建筑物
    H_WALL = 4; // 墙
    H_CARPET = 5; // 地毯
    H_ROAD = 6; // 路
    H_GOODS = 7;// 可交互的物体,占用多个格子

    H_ITEM = 20;// 物品, 不用瓦片制作
}
