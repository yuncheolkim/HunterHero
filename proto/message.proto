syntax = "proto3";
package Message;
option java_package = "game.proto";
option optimize_for = SPEED;
option java_multiple_files = true;
import "data.proto";
message Message {
    int32 version = 1;
    int32 msgNo = 2;
    int32 error = 3;
    int32 seq = 4;
    bytes body = 10;

}
message Empty {
}
message Success {
}
// -1 Test cmd
message CmdReq {
    string params = 1;
}

message ValueChange{
    int32 v1 = 1;
    int32 v2 = 2;
}


// 登录
// 1
message LoginReq {
    int64 playerId = 1;
    string code = 2;
}

// 1 登录信息
message LoginRes {
    PlayerData data = 1;
    bool first = 3;
}
//2
message KickPush {
}

//3
message PlayerCreateNameReq {
    string name = 1;
}
// 4
message HeartbeatReq {
    int64 time = 1;
}
message HeartbeatRes {
    int64 time = 1;
}

//10~1000 后端使用
// 10 tick
// 11 dataSave

// 开启新功能
message FeatureOpenPush{
    int32 id = 1;
}


/////////////////////////////////////////////////  任务
message TaskReq {
    int32 taskId = 1;
}

// 新任务
message TaskNewPush {
    repeated int32 taskId = 1;
}

// 任务发生变化
message TaskStatusChangePush {
    int32 npcId = 10;
    int32 taskId = 20;

    // 1:完成未提交,2:完成已提交,3:接受任务,4:进度更新
    int32 status = 35;
    // 任务目标id
    int32 targetId = 50;
    // 任务进度
    int32 count = 40;
    // 第一次接受任务
    bool accept = 60;

    RunTask runTask = 70;
}

// 获得npc的任务列表
message TaskNpcReq {
    int32 npcId = 1;
}
message TaskNpcRes {
    int32 npcId = 1;
    repeated int32 acceptableTask = 2;
    map<int32, RunTask> runTask = 3;
}

// Abandon task
message TaskAbandonReq{
    int32 taskId = 1;
}
message TaskAbandonRes{
    int32 taskId = 1;
}
/////////////////////////////////////////////////  战斗
// 2001 开始战斗
message FightStartReq {
    repeated FightHeroPos pos = 1;
}
// 2002 发生战斗推送
message FightStartPush {
    repeated FightEnemyInfo info = 1;
    bool manual = 2;// 是否可手动
}

// 2003 战斗结果res

message FightTestReq{
    repeated FightHeroPos a = 1;
    repeated FightEnemyInfo b = 2;
}
message FightTestRes{
    bool win = 1;
    FightRecord record = 4;
}

// 手动战斗开始
message FightHmStartRes{
    repeated HeroDataRecord sideA = 2;
    repeated HeroDataRecord sideB = 3;
}
// 手动战斗操作 req
message FightHmActionReq{
    repeated FightHmHeroPos pos = 1;
}

// 手动战斗进行中
message FightHmActionRes{
    RoundRecord round = 1;
}
// 手动战斗结束
message FightHmEndPush{
    bool win = 4; // 是否胜利
    repeated Reward reward = 5; // 奖励
}

// 战役结果通知
message BattleEndPush{
    bool win = 1;
    int32 battleId = 2;
}
// 3001 进入场景
message EnterSceneReq {
    SceneData data = 1;
}
// 3002 进入战斗区域
message EnterFightAreaReq {
    int32 id = 1;
}
// 3003 离开战斗区域
message ExitFightAreaReq {
    int32 id = 1;
}

message BattleEnterReq{
    int32 id = 1;
}
///////////////////////////////////////////////  hero
// 4001 提高英雄属性
message HeroUpReq {
    int32 heroId = 1;
    int32 stepId = 3;
}

// 4003 英雄变化
message HeroChangePush {
    PlayerHero hero = 1;
}

message HeroTalentChangeReq{
    int32 heroId = 1;
    int32 talent = 2;
}
message HeroTalentChangeRes{
    int32 heroId = 1;
    int32 talent = 2;
}

// 添加新英雄
message NewHeroPush{
    PlayerHero hero = 1;
}
///////////////////////////////////////////////  formation
// 创建阵型
message FormationCreateReq {
}
message FormationCreateRes {
    int32 formationId = 1;
}
//// 查询阵型
//message FormationListReq {
//
//}
//// 查询阵型res
//message FormationListRes {
//
//}
// 更新阵型
message FormationUpdateReq {
    int32 formationId = 1;
    FormationPos pos = 2;
}

message FormationUpdateRes {
    int32 formationId = 1;
    repeated FormationPosUpdate data = 2;
}


// 删除阵型
message FormationDeleteReq {
    int32 index = 1;
}

// 指定阵型用到哪里
// 如竞技场，pvp等
message FormationSettingReq {
    int32 index = 1;
    string name = 2;
    int32 defaultFormationIndex = 3;
    int32 arenaFormationIndex = 4;
}

message FormationSettingRes {
    int32 index = 1;
    string name = 2;
    int32 defaultFormationIndex = 3;
    int32 arenaFormationIndex = 4;
}

// 5001 资源变化
message ResourceChangePush {
    int32 resourceId = 1;
    int32 heroId = 2;
    int32 count = 3;
    int32 curCount = 4;
}

///////////////////////////////////////////  资源变化
// 玩家等级变化
message PlayerLevelChangePush {
    int32 value = 1;
}

// 经验变化推送
message ExpChangePush {
    int32 heroId = 1;
    int32 addExp = 2;
    int32 curExp = 3;
}

message RecoverPowerReq{
    int32 type = 1; // 1:全部，2:单个
    int32 gem = 2;
    int32 gold = 3;
}

// 背包变化推送
message BagInfoChangePush {
    // 是否整理
    bool clean = 9;
    // 1:bag, 2:bank
    int32 type = 10;
    int32 capacity = 20;
    repeated BagSlot slot = 30;
}

message BagCleanReq {
    int32 type = 1;
}

// 丢弃物品
message ItemDiscardReq {
    int32 itemId = 1;
    int32 count = 2;
    int32 slotId = 3;
    // 1:bag, 2:bank
    int32 type = 4;
}

// 购买物品
message ItemBuyReq {
    int32 itemId = 1;
    int32 count = 2;
    int32 shopId = 3;
}

// 银行背包,转移物品
message ItemExchangeReq {
    int32 type = 1; // 1: bank -> bag, 2: bag -> bank
    int32 slotId = 2;
    int32 count = 3;
}

// 出售物品
message ItemSellReq {
    int32 slotId = 1;
    int32 count = 2;
}

// 装备物品
message HeroEquipmentReq {
    int32 slotId = 1; // 装备所在的背包位置
    int32 heroId = 2;
}


// 玩家移动
message PlayerMoveReq{
    float x = 1;
    float y = 2;
}

// 回城
message PlayerGoHotelRes{
    int64 time = 1;
}

// 选择回城点
message PlayerChooseHotelReq{
    int32 id = 1;
}
message PlayerChooseHotelRes{
    int32 id = 1;
}

///////////////////////////////////////////////  Fish
// 钓鱼
message FishReq{
}

// 钓鱼-上钩提示
message FishHookPush{

}

// 钓鱼-成功发送奖励
message FishPush{
    bool success = 1;
    repeated Reward reward = 2;
}
// 钓鱼提竿
message FishHookReq{

}

// 钓鱼-进入区域
message FishEnterAreaReq{
    int32 id = 1;
}

// 钓鱼-离开区域
message FishExitAreaReq{
    int32 id = 1;
}

//聊天
enum ChatChannel {
    C_NONE = 0;
    WORLD = 1;
    GROUP = 2;
    PRIVACY = 3;
    SYSTEM = 4;
    NEAR = 5;
}

message ChatMessageReq{
    ChatChannel channel = 1;
    int64 toUser = 2;
    string content = 10;
}

message ChatMessagePush{
    ChatChannel channel = 1;
    int64 fromUser = 2;
    int64 time = 3;
    int64 id = 4;
    string content = 10;
    string name = 11;
}

///////////////////////////////////////////  称谓

// 选择称谓
message TitleChooseReq{
    int32 id = 1;
}

message TitleChooseRes{
    int32 id = 1;
}
// 获得新称谓
message TitleNewPush{
    int32 id = 1;
}

///////////////////////////////////////////////  Npc

message NpcShowChangePush{
    int32 showNo = 1;
    int32 npcId = 2;
}
///////////////////////////////////////////////  Temple
// 购买英雄
message TempleHeroBuyReq{
    int32 id = 1;
    // 1:金币, 2:宝石
    int32 type = 2;
}
message TempleHeroBuyRes{
    int32 id = 1;
}
///////////////////////////////////////////////  副本

message DungeonEnterReq{
    int32 id = 1;
}
message DungeonEnterRes{

}
message DungeonFightReq{
    int32 targetId = 1;
}
message DungeonExitReq{
}
message DungeonExitRes{
}
///////////////////////////////////////////////  Express

message ExpressStartRqRs{
    int32 id = 1;
}

message ExpressCompleteReq{

}
message ExpressCompleteRes{
    int32 id = 1;
}
// 跑镖信息
message ExpressInfoRes{
    bool update = 1;
    repeated int32 info = 2;

}
///////////////////////////////////////////////  Home

// 区域
message HomeOpenAreaRqRs{
    int32 id = 1;
}

// Farm, build, wall etc.
message HomeChangeReq{
    repeated  HomePosData data = 5;
}

// Harvest
message HomeHarvestReq{
    repeated int32 pos = 3;
}

message HomeHarvestRes{
    int32 pos = 3;
    repeated HomeRect rect = 4;
}
message HomeCleanReq{
    repeated int32 pos = 3;
}

// 生产
message HomeProductReq{
    int32 productId = 1;
    int32 type = 2;// 1:cook
}

message HomeTaskCompleteReq{
    int32 id = 1;
}

// 新的任务
message HomeNewTaskDayPush{
    int32 day = 1;
}

///////////////////////////////////////////////  ladder
message LadderMatchReq{
    int64 id = 1;;
}
message LadderSetFormationReq{
    int32 heroId = 1;
}

message LadderCancelReq{
    int32 type = 1;
    int64 id = 2;
}
message LadderCancelPush{

}

message LadderResultPush{
    FightRecord record = 1;
    int32 score = 2;
    int32 add = 3;
}

